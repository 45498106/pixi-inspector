{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bin/PixiInspector.js","bin/attributes/ArrayAttributeParser.js","bin/attributes/AutoAttributeParser.js","bin/attributes/PointAttributeParser.js","bin/attributes/PrimitiveAttributeParser.js","bin/attributes/TextureAttributeParser.js","bin/decorators/domAttr.js","bin/decorators/domHidden.js","bin/decorators/domLeaf.js","bin/getDefault.js","bin/inspector.js","bin"],"names":[],"mappings":";;;;;;;AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pixi-inspector.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar domAttr_1 = require(\"./decorators/domAttr\");\r\nvar domLeaf_1 = require(\"./decorators/domLeaf\");\r\nvar domHidden_1 = require(\"./decorators/domHidden\");\r\nvar PixiInspector = (function () {\r\n    function PixiInspector(_rootNode, _canvas) {\r\n        var _this = this;\r\n        this._rootNode = _rootNode;\r\n        this._canvas = _canvas;\r\n        this._elementPool = new ElementPool();\r\n        this._tempRect = new PIXI.Rectangle();\r\n        this._mutationObserver = new MutationObserver(function (mutations) { return _this.onDomChange(mutations); });\r\n        this._updateInterval = 0.2;\r\n        this.createStyleSheet();\r\n        this.update();\r\n        _canvas.parentNode.insertBefore(this._rootElement, _canvas.nextSibling);\r\n        this.addDocumentListeners();\r\n        this.startUpdateInterval();\r\n    }\r\n    PixiInspector.prototype.domAttr = function (nodeType, propertyName, parser) {\r\n        domAttr_1.domAttr(parser)(nodeType.prototype, propertyName);\r\n        return this;\r\n    };\r\n    PixiInspector.prototype.domLeaf = function (nodeType) {\r\n        domLeaf_1.domLeaf()(nodeType);\r\n        return this;\r\n    };\r\n    PixiInspector.prototype.domHidden = function (nodeType) {\r\n        domHidden_1.domHidden()(nodeType);\r\n        return this;\r\n    };\r\n    Object.defineProperty(PixiInspector.prototype, \"updateInterval\", {\r\n        get: function () {\r\n            return this._updateInterval;\r\n        },\r\n        set: function (value) {\r\n            if (this._updateInterval != value) {\r\n                this._updateInterval = value;\r\n                this.startUpdateInterval();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PixiInspector.prototype.startUpdateInterval = function () {\r\n        var _this = this;\r\n        clearInterval(this._updateIntervalId);\r\n        this._updateIntervalId = setInterval(function () { return _this.update(); }, this._updateInterval * 1000);\r\n    };\r\n    PixiInspector.prototype.update = function () {\r\n        PixiInspector.styleSheet.disabled = true;\r\n        this._mutationObserver.disconnect();\r\n        this._rootElement = this.buildElement(this._rootNode, this._rootElement);\r\n        this._mutationObserver.observe(this._rootElement, { subtree: true, attributes: true });\r\n        PixiInspector.styleSheet.disabled = false;\r\n    };\r\n    PixiInspector.prototype.buildElement = function (node, element) {\r\n        element = element || this._elementPool.get(node);\r\n        element.pixiTarget = node;\r\n        this.setElementStyle(node, element);\r\n        this.setElementAttributes(node, element);\r\n        if (node instanceof PIXI.Container && !node['__pixi_inspector_is_leaf__']) {\r\n            var i = 0;\r\n            var n = Math.min(node.children.length, element.childNodes.length);\r\n            for (; i < n; i++) {\r\n                var childElement = element.childNodes[i];\r\n                var childNode = node.children[i];\r\n                if (childElement.pixiTarget == childNode) {\r\n                    this.buildElement(childNode, childElement);\r\n                }\r\n                else {\r\n                    element.replaceChild(this.buildElement(childNode), childElement);\r\n                    this.releaseElement(childElement);\r\n                }\r\n            }\r\n            while (element.childNodes.length > n) {\r\n                this.releaseElement(element.lastChild);\r\n                element.lastChild.remove();\r\n            }\r\n            n = node.children.length;\r\n            for (; i < n; i++) {\r\n                element.appendChild(this.buildElement(node.children[i]));\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    PixiInspector.prototype.releaseElement = function (element) {\r\n        element.pixiTarget = null;\r\n        while (element.attributes.length > 1) {\r\n            element.removeAttributeNode(element.attributes[1]);\r\n        }\r\n        while (element.childNodes.length > 0) {\r\n            this.releaseElement(element.lastChild);\r\n            element.lastChild.remove();\r\n        }\r\n        this._elementPool.release(element);\r\n    };\r\n    PixiInspector.prototype.setElementStyle = function (node, element) {\r\n        var bounds = node.getBounds(false, this._tempRect);\r\n        if (!element.pixiStyle) {\r\n            var index = PixiInspector.styleSheet.cssRules.length;\r\n            PixiInspector.styleSheet.insertRule(\"#px\" + index + \" {position:fixed;top:0;left:0;width:0;height:0}\", index);\r\n            element.pixiStyle = PixiInspector.styleSheet.cssRules[index].style;\r\n            element.id = \"px\" + index;\r\n        }\r\n        var style = element.pixiStyle;\r\n        if (node['__pixi_inspector_is_hidden__']) {\r\n            style.display = 'none';\r\n        }\r\n        style.top = (bounds.top + this._canvas.offsetTop).toFixed(2) + \"px\";\r\n        style.left = (bounds.left + this._canvas.offsetLeft).toFixed(2) + \"px\";\r\n        style.width = (bounds.width).toFixed(2) + \"px\";\r\n        style.height = (bounds.height).toFixed(2) + \"px\";\r\n    };\r\n    PixiInspector.prototype.setElementAttributes = function (node, element) {\r\n        var attributes = node['__pixi_inspector_attributes__'];\r\n        if (attributes) {\r\n            for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\r\n                var attribute = attributes_1[_i];\r\n                var value = void 0;\r\n                try {\r\n                    value = node[attribute.name];\r\n                }\r\n                catch (e) {\r\n                    continue;\r\n                }\r\n                if (attribute.parser.visible(value)) {\r\n                    element.setAttribute(attribute.name, attribute.parser.stringify(value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PixiInspector.prototype.onDomChange = function (mutations) {\r\n        for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\r\n            var mutation = mutations_1[_i];\r\n            if (mutation.type == 'attributes') {\r\n                var element = mutation.target;\r\n                var node = element.pixiTarget;\r\n                if (node) {\r\n                    var name_1 = mutation.attributeName;\r\n                    var value = element.getAttribute(name_1);\r\n                    var attributes = node['__pixi_inspector_attributes__'];\r\n                    if (attributes) {\r\n                        for (var _a = 0, attributes_2 = attributes; _a < attributes_2.length; _a++) {\r\n                            var attribute = attributes_2[_a];\r\n                            if (attribute.name == name_1) {\r\n                                node[name_1] = attribute.parser.parse(value, node[name_1]);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PixiInspector.prototype.createStyleSheet = function () {\r\n        if (!PixiInspector.styleSheet) {\r\n            var style = document.createElement('style');\r\n            style.appendChild(document.createTextNode('' +\r\n                '[id^=\"px\"] {pointer-events:none;}' +\r\n                '[id^=\"px\"]:empty {pointer-events:none;}' +\r\n                '[id^=\"px\"]:empty:hover {background:rgba(255,255,255,0.2);border:solid 1px #fff}'));\r\n            document.head.appendChild(style);\r\n            PixiInspector.styleSheet = style.sheet;\r\n        }\r\n    };\r\n    PixiInspector.prototype.addDocumentListeners = function () {\r\n        var _this = this;\r\n        var ctrl = 17;\r\n        var style = PixiInspector.styleSheet.cssRules[1].style;\r\n        document.addEventListener('keydown', function (event) {\r\n            if (event.which == ctrl && !_this._pointerEvents) {\r\n                _this._pointerEvents = true;\r\n                style.pointerEvents = 'auto';\r\n            }\r\n        });\r\n        document.addEventListener('keyup', function (event) {\r\n            if (event.which == ctrl && _this._pointerEvents) {\r\n                _this._pointerEvents = false;\r\n                style.pointerEvents = 'none';\r\n            }\r\n        });\r\n        document.addEventListener('click', function (event) {\r\n            var target = event.target.pixiTarget;\r\n            if (target) {\r\n                window.$pixi = target;\r\n            }\r\n        });\r\n        document.addEventListener('contextmenu', function (event) {\r\n            var target = event.target.pixiTarget;\r\n            if (target) {\r\n                window.$pixi = target;\r\n            }\r\n        });\r\n    };\r\n    return PixiInspector;\r\n}());\r\nexports.PixiInspector = PixiInspector;\r\nvar ElementPool = (function () {\r\n    function ElementPool() {\r\n        this.pools = {};\r\n    }\r\n    ElementPool.prototype.get = function (obj) {\r\n        var tagName = 'px-' + this.getTagName(obj).toLowerCase();\r\n        if (!Array.isArray(this.pools[tagName])) {\r\n            this.pools[tagName] = [];\r\n            if (!customElements.get(tagName)) {\r\n                customElements.define(tagName, function () {\r\n                }, { extends: 'div' });\r\n            }\r\n        }\r\n        return this.pools[tagName].pop() || document.createElement(tagName);\r\n    };\r\n    ElementPool.prototype.release = function (element) {\r\n        if (this.pools[element.localName].indexOf(element) < 0) {\r\n            this.pools[element.localName].push(element);\r\n        }\r\n    };\r\n    ElementPool.prototype.getTagName = function (obj) {\r\n        var className = null;\r\n        if (obj.constructor) {\r\n            var exec = /function\\s+(\\w{2,})\\(/.exec(obj.constructor.toString());\r\n            className = exec ? exec[1] : null;\r\n        }\r\n        if (className) {\r\n            return className;\r\n        }\r\n        for (var _i = 0, _a = ElementPool.defaultConstructors; _i < _a.length; _i++) {\r\n            var defaultConstructor = _a[_i];\r\n            if (obj instanceof defaultConstructor[0]) {\r\n                return defaultConstructor[1];\r\n            }\r\n        }\r\n        return 'DisplayObject';\r\n    };\r\n    ElementPool.defaultConstructors = [\r\n        [PIXI.mesh.NineSlicePlane, 'NineSlicePlane'],\r\n        [PIXI.mesh.Plane, 'Plane'],\r\n        [PIXI.mesh.Rope, 'Rope'],\r\n        [PIXI.Text, 'Text'],\r\n        [PIXI.extras.BitmapText, 'BitmapText'],\r\n        [PIXI.extras.AnimatedSprite, 'AnimatedSprite'],\r\n        [PIXI.extras.TilingSprite, 'TilingSprite'],\r\n        [PIXI.Sprite, 'Sprite'],\r\n        [PIXI.Graphics, 'Graphics'],\r\n        [PIXI.Container, 'Container'],\r\n    ];\r\n    return ElementPool;\r\n}());\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PrimitiveAttributeParser_1 = require(\"./PrimitiveAttributeParser\");\r\nvar ArrayAttributeParser = (function () {\r\n    function ArrayAttributeParser(elementParser, delimiter) {\r\n        if (delimiter === void 0) { delimiter = ','; }\r\n        this.delimiter = delimiter;\r\n        this.elementParser = typeof elementParser == 'function'\r\n            ? new elementParser()\r\n            : (elementParser || (new PrimitiveAttributeParser_1.PrimitiveAttributeParser()));\r\n    }\r\n    ArrayAttributeParser.prototype.parse = function (str, value) {\r\n        if (!Array.isArray(value)) {\r\n            value = [];\r\n        }\r\n        var i = 0;\r\n        var a = str.split(this.delimiter);\r\n        var n = Math.min(value.length, a.length);\r\n        for (i; i < n; i++) {\r\n            value[i] = this.elementParser.parse(a[i], value[i]);\r\n        }\r\n        n = a.length;\r\n        for (i; i < n; i++) {\r\n            value[i] = this.elementParser.parse(a[i]);\r\n        }\r\n        while (value.length > n) {\r\n            value.pop();\r\n        }\r\n        return value;\r\n    };\r\n    ArrayAttributeParser.prototype.stringify = function (value) {\r\n        var _this = this;\r\n        if (Array.isArray(value)) {\r\n            return value.map(function (it) { return _this.elementParser.stringify(it); }).join(this.delimiter);\r\n        }\r\n        return '';\r\n    };\r\n    ArrayAttributeParser.prototype.visible = function (value) {\r\n        return Array.isArray(value);\r\n    };\r\n    return ArrayAttributeParser;\r\n}());\r\nexports.ArrayAttributeParser = ArrayAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PrimitiveAttributeParser_1 = require(\"./PrimitiveAttributeParser\");\r\nvar ArrayAttributeParser_1 = require(\"./ArrayAttributeParser\");\r\nvar AutoAttributeParser = (function () {\r\n    function AutoAttributeParser() {\r\n        this.arrayAttributeParser = new ArrayAttributeParser_1.ArrayAttributeParser();\r\n        this.primitiveAttributeParser = new PrimitiveAttributeParser_1.PrimitiveAttributeParser();\r\n    }\r\n    AutoAttributeParser.prototype.parse = function (str, value) {\r\n        if (Array.isArray(value)) {\r\n            return this.arrayAttributeParser.parse(str, value);\r\n        }\r\n        return this.primitiveAttributeParser.parse(str, value);\r\n    };\r\n    AutoAttributeParser.prototype.stringify = function (value) {\r\n        if (Array.isArray(value)) {\r\n            return this.arrayAttributeParser.stringify(value);\r\n        }\r\n        return this.primitiveAttributeParser.stringify(value);\r\n    };\r\n    AutoAttributeParser.prototype.visible = function (value) {\r\n        return true;\r\n    };\r\n    return AutoAttributeParser;\r\n}());\r\nexports.AutoAttributeParser = AutoAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PointAttributeParser = (function () {\r\n    function PointAttributeParser(numberPrecision, factory) {\r\n        if (numberPrecision === void 0) { numberPrecision = 2; }\r\n        this.numberPrecision = numberPrecision;\r\n        this.factory = factory;\r\n    }\r\n    PointAttributeParser.prototype.parse = function (str, value) {\r\n        if (!value) {\r\n            if (this.factory) {\r\n                value = this.factory();\r\n            }\r\n            else {\r\n                console.error('Cannot parse attribute from \"' + str + '\" because factory is not defined.');\r\n                return value;\r\n            }\r\n        }\r\n        var n = str.split(',');\r\n        if (n.length > 1) {\r\n            value.x = parseFloat(n[0]);\r\n            value.y = parseFloat(n[1]);\r\n        }\r\n        else {\r\n            value.x = value.y = parseFloat(n[0]);\r\n        }\r\n        return value;\r\n    };\r\n    PointAttributeParser.prototype.stringify = function (value) {\r\n        if (value) {\r\n            var x = value.x.toFixed(this.numberPrecision);\r\n            var y = value.y.toFixed(this.numberPrecision);\r\n            return x == y ? x : x + ',' + y;\r\n        }\r\n        return '';\r\n    };\r\n    PointAttributeParser.prototype.visible = function (value) {\r\n        return value != null;\r\n    };\r\n    return PointAttributeParser;\r\n}());\r\nexports.PointAttributeParser = PointAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PrimitiveAttributeParser = (function () {\r\n    function PrimitiveAttributeParser(numberPrecision) {\r\n        if (numberPrecision === void 0) { numberPrecision = 2; }\r\n        this.numberPrecision = numberPrecision;\r\n    }\r\n    PrimitiveAttributeParser.prototype.parse = function (str, value) {\r\n        switch (typeof value) {\r\n            case 'number':\r\n                return parseFloat(str);\r\n            case 'boolean':\r\n                return str == 'true';\r\n            case 'string':\r\n                return str;\r\n        }\r\n        if (str == 'true' || str == 'false') {\r\n            return str == 'true';\r\n        }\r\n        var n = parseFloat(str);\r\n        if (!isNaN(n)) {\r\n            return n;\r\n        }\r\n        return str;\r\n    };\r\n    PrimitiveAttributeParser.prototype.stringify = function (value) {\r\n        if (typeof value == 'number') {\r\n            return value.toFixed(this.numberPrecision);\r\n        }\r\n        if (value === false || value) {\r\n            return value.toString();\r\n        }\r\n        return '';\r\n    };\r\n    PrimitiveAttributeParser.prototype.visible = function (value) {\r\n        return true;\r\n    };\r\n    return PrimitiveAttributeParser;\r\n}());\r\nexports.PrimitiveAttributeParser = PrimitiveAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TextureAttributeParser = (function () {\r\n    function TextureAttributeParser() {\r\n    }\r\n    TextureAttributeParser.prototype.parse = function (str, value) {\r\n        var texture = PIXI.utils.TextureCache[str];\r\n        if (texture instanceof PIXI.Texture) {\r\n            return texture;\r\n        }\r\n        return value;\r\n    };\r\n    TextureAttributeParser.prototype.stringify = function (value) {\r\n        return value.textureCacheIds[0];\r\n    };\r\n    TextureAttributeParser.prototype.visible = function (value) {\r\n        return !!value.textureCacheIds;\r\n    };\r\n    return TextureAttributeParser;\r\n}());\r\nexports.TextureAttributeParser = TextureAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AutoAttributeParser_1 = require(\"../attributes/AutoAttributeParser\");\r\nfunction domAttr(parser) {\r\n    return function (target, propertyName) {\r\n        if (!target.hasOwnProperty('__pixi_inspector_class_attributes__')) {\r\n            target['__pixi_inspector_class_attributes__'] = [];\r\n        }\r\n        var classAttributes = target['__pixi_inspector_class_attributes__'];\r\n        if (!classAttributes.some(function (it) { return it.name == propertyName; })) {\r\n            classAttributes.push({\r\n                name: propertyName,\r\n                parser: typeof parser == 'function' ? new parser() : (parser || new AutoAttributeParser_1.AutoAttributeParser())\r\n            });\r\n        }\r\n        if (!target.hasOwnProperty('__pixi_inspector_attributes__')) {\r\n            Object.defineProperty(target, '__pixi_inspector_attributes__', {\r\n                get: function () {\r\n                    var superClassAttributes = Object.getPrototypeOf(target)['__pixi_inspector_attributes__'];\r\n                    if (Array.isArray(superClassAttributes)) {\r\n                        return superClassAttributes.concat(classAttributes);\r\n                    }\r\n                    return classAttributes;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\nexports.domAttr = domAttr;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction domHidden() {\r\n    return function (constructor) {\r\n        constructor.prototype['__pixi_inspector_is_hidden__'] = true;\r\n    };\r\n}\r\nexports.domHidden = domHidden;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction domLeaf() {\r\n    return function (constructor) {\r\n        constructor.prototype['__pixi_inspector_is_leaf__'] = true;\r\n    };\r\n}\r\nexports.domLeaf = domLeaf;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PixiInspector_1 = require(\"./PixiInspector\");\r\nvar PointAttributeParser_1 = require(\"./attributes/PointAttributeParser\");\r\nvar TextureAttributeParser_1 = require(\"./attributes/TextureAttributeParser\");\r\nfunction getDefault(rootNode, canvas) {\r\n    return new PixiInspector_1.PixiInspector(rootNode, canvas)\r\n        .domAttr(PIXI.DisplayObject, 'x')\r\n        .domAttr(PIXI.DisplayObject, 'y')\r\n        .domAttr(PIXI.DisplayObject, 'scale', PointAttributeParser_1.PointAttributeParser)\r\n        .domAttr(PIXI.DisplayObject, 'rotation')\r\n        .domAttr(PIXI.DisplayObject, 'alpha')\r\n        .domAttr(PIXI.Sprite, 'texture', TextureAttributeParser_1.TextureAttributeParser)\r\n        .domAttr(PIXI.Sprite, 'anchor', PointAttributeParser_1.PointAttributeParser)\r\n        .domAttr(PIXI.mesh.Mesh, 'texture', TextureAttributeParser_1.TextureAttributeParser)\r\n        .domAttr(PIXI.Text, 'text')\r\n        .domAttr(PIXI.Text, 'anchor', PointAttributeParser_1.PointAttributeParser)\r\n        .domAttr(PIXI.extras.BitmapText, 'text')\r\n        .domAttr(PIXI.extras.BitmapText, 'anchor', PointAttributeParser_1.PointAttributeParser);\r\n}\r\nexports.getDefault = getDefault;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PixiInspector_1 = require(\"./PixiInspector\");\r\nexports.PixiInspector = PixiInspector_1.PixiInspector;\r\nvar getDefault_1 = require(\"./getDefault\");\r\nexports.getDefault = getDefault_1.getDefault;\r\nvar domAttr_1 = require(\"./decorators/domAttr\");\r\nexports.domAttr = domAttr_1.domAttr;\r\nvar domLeaf_1 = require(\"./decorators/domLeaf\");\r\nexports.domLeaf = domLeaf_1.domLeaf;\r\nvar domHidden_1 = require(\"./decorators/domHidden\");\r\nexports.domHidden = domHidden_1.domHidden;\r\nvar PrimitiveAttributeParser_1 = require(\"./attributes/PrimitiveAttributeParser\");\r\nexports.PrimitiveAttributeParser = PrimitiveAttributeParser_1.PrimitiveAttributeParser;\r\nvar PointAttributeParser_1 = require(\"./attributes/PointAttributeParser\");\r\nexports.PointAttributeParser = PointAttributeParser_1.PointAttributeParser;\r\nvar ArrayAttributeParser_1 = require(\"./attributes/ArrayAttributeParser\");\r\nexports.ArrayAttributeParser = ArrayAttributeParser_1.ArrayAttributeParser;\r\nvar TextureAttributeParser_1 = require(\"./attributes/TextureAttributeParser\");\r\nexports.TextureAttributeParser = TextureAttributeParser_1.TextureAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nif (typeof PIXI === 'undefined') {\r\n    throw \"pixi-inspector requires pixi.js to be loaded first\";\r\n}\r\nvar inspector = require(\"./inspector\");\r\nif (!PIXI.inspector) {\r\n    PIXI.inspector = inspector;\r\n}\r\nelse {\r\n    for (var prop in inspector) {\r\n        PIXI.inspector[prop] = inspector[prop];\r\n    }\r\n}\r\nif (typeof module !== \"undefined\" && module.exports) {\r\n    module.exports = inspector;\r\n}\r\n"],"sourceRoot":"."}