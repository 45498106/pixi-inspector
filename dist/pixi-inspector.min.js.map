{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bin/PixiInspector.js","bin/attributes/ArrayAttributeParser.js","bin/attributes/AutoAttributeParser.js","bin/attributes/ColorAttributeParser.js","bin/attributes/PointAttributeParser.js","bin/attributes/PrimitiveAttributeParser.js","bin/attributes/TextureAttributeParser.js","bin/decorators/domAttr.js","bin/decorators/domHidden.js","bin/decorators/domLeaf.js","bin/getDefault.js","bin/inspector.js","bin"],"names":["f","exports","module","define","amd","g","window","global","self","this","pixiInspector","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","Object","defineProperty","value","domAttr_1","domLeaf_1","domHidden_1","PixiInspector","_rootNode","_canvas","_this","_elementPool","ElementPool","_tempRect","PIXI","Rectangle","_mutationObserver","MutationObserver","mutations","onDomChange","_updateInterval","createStyleSheet","update","parentNode","insertBefore","_rootElement","nextSibling","addDocumentListeners","startUpdateInterval","prototype","domAttr","nodeType","propertyName","parser","domLeaf","domHidden","get","set","enumerable","configurable","clearInterval","_updateIntervalId","setInterval","styleSheet","disabled","disconnect","buildElement","observe","subtree","attributes","node","element","pixiTarget","setElementStyle","setElementAttributes","Container","Math","min","children","childNodes","childElement","childNode","replaceChild","releaseElement","lastChild","remove","appendChild","removeAttributeNode","release","bounds","getBounds","pixiStyle","index","cssRules","insertRule","style","id","display","top","offsetTop","toFixed","left","offsetLeft","width","height","_i","attributes_1","attribute","name","visible","setAttribute","stringify","mutations_1","mutation","type","target","name_1","attributeName","getAttribute","_a","attributes_2","parse","document","createElement","createTextNode","head","sheet","addEventListener","event","which","_pointerEvents","pointerEvents","$pixi","pools","obj","tagName","getTagName","toLowerCase","Array","isArray","customElements","extends","pop","localName","indexOf","push","className","constructor","exec","toString","defaultConstructors","defaultConstructor","mesh","NineSlicePlane","Plane","Rope","Text","extras","BitmapText","AnimatedSprite","TilingSprite","Sprite","Graphics","PrimitiveAttributeParser_1","ArrayAttributeParser","elementParser","delimiter","PrimitiveAttributeParser","str","split","map","it","join","ArrayAttributeParser_1","AutoAttributeParser","arrayAttributeParser","primitiveAttributeParser","ColorAttributeParser","parseInt","replace","PointAttributeParser","numberPrecision","factory","console","error","x","parseFloat","y","isNaN","TextureAttributeParser","texture","utils","TextureCache","Texture","textureCacheIds","hasOwnProperty","classAttributes","some","AutoAttributeParser_1","superClassAttributes","getPrototypeOf","concat","getDefault","rootNode","canvas","PixiInspector_1","DisplayObject","PointAttributeParser_1","TextureAttributeParser_1","ColorAttributeParser_1","Mesh","getDefault_1","inspector","prop"],"mappings":"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","file":"pixi-inspector.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar domAttr_1 = require(\"./decorators/domAttr\");\r\nvar domLeaf_1 = require(\"./decorators/domLeaf\");\r\nvar domHidden_1 = require(\"./decorators/domHidden\");\r\nvar PixiInspector = (function () {\r\n    function PixiInspector(_rootNode, _canvas) {\r\n        var _this = this;\r\n        this._rootNode = _rootNode;\r\n        this._canvas = _canvas;\r\n        this._elementPool = new ElementPool();\r\n        this._tempRect = new PIXI.Rectangle();\r\n        this._mutationObserver = new MutationObserver(function (mutations) { return _this.onDomChange(mutations); });\r\n        this._updateInterval = 0.2;\r\n        this.createStyleSheet();\r\n        this.update();\r\n        _canvas.parentNode.insertBefore(this._rootElement, _canvas.nextSibling);\r\n        this.addDocumentListeners();\r\n        this.startUpdateInterval();\r\n    }\r\n    PixiInspector.prototype.domAttr = function (nodeType, propertyName, parser) {\r\n        domAttr_1.domAttr(parser)(nodeType.prototype, propertyName);\r\n        return this;\r\n    };\r\n    PixiInspector.prototype.domLeaf = function (nodeType) {\r\n        domLeaf_1.domLeaf()(nodeType);\r\n        return this;\r\n    };\r\n    PixiInspector.prototype.domHidden = function (nodeType) {\r\n        domHidden_1.domHidden()(nodeType);\r\n        return this;\r\n    };\r\n    Object.defineProperty(PixiInspector.prototype, \"updateInterval\", {\r\n        get: function () {\r\n            return this._updateInterval;\r\n        },\r\n        set: function (value) {\r\n            if (this._updateInterval != value) {\r\n                this._updateInterval = value;\r\n                this.startUpdateInterval();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PixiInspector.prototype.startUpdateInterval = function () {\r\n        var _this = this;\r\n        clearInterval(this._updateIntervalId);\r\n        this._updateIntervalId = setInterval(function () { return _this.update(); }, this._updateInterval * 1000);\r\n    };\r\n    PixiInspector.prototype.update = function () {\r\n        PixiInspector.styleSheet.disabled = true;\r\n        this._mutationObserver.disconnect();\r\n        this._rootElement = this.buildElement(this._rootNode, this._rootElement);\r\n        this._mutationObserver.observe(this._rootElement, { subtree: true, attributes: true });\r\n        PixiInspector.styleSheet.disabled = false;\r\n    };\r\n    PixiInspector.prototype.buildElement = function (node, element) {\r\n        element = element || this._elementPool.get(node);\r\n        element.pixiTarget = node;\r\n        this.setElementStyle(node, element);\r\n        this.setElementAttributes(node, element);\r\n        if (node instanceof PIXI.Container && !node['__pixi_inspector_is_leaf__']) {\r\n            var i = 0;\r\n            var n = Math.min(node.children.length, element.childNodes.length);\r\n            for (; i < n; i++) {\r\n                var childElement = element.childNodes[i];\r\n                var childNode = node.children[i];\r\n                if (childElement.pixiTarget == childNode) {\r\n                    this.buildElement(childNode, childElement);\r\n                }\r\n                else {\r\n                    element.replaceChild(this.buildElement(childNode), childElement);\r\n                    this.releaseElement(childElement);\r\n                }\r\n            }\r\n            while (element.childNodes.length > n) {\r\n                this.releaseElement(element.lastChild);\r\n                element.lastChild.remove();\r\n            }\r\n            n = node.children.length;\r\n            for (; i < n; i++) {\r\n                element.appendChild(this.buildElement(node.children[i]));\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    PixiInspector.prototype.releaseElement = function (element) {\r\n        element.pixiTarget = null;\r\n        while (element.attributes.length > 1) {\r\n            element.removeAttributeNode(element.attributes[1]);\r\n        }\r\n        while (element.childNodes.length > 0) {\r\n            this.releaseElement(element.lastChild);\r\n            element.lastChild.remove();\r\n        }\r\n        this._elementPool.release(element);\r\n    };\r\n    PixiInspector.prototype.setElementStyle = function (node, element) {\r\n        var bounds = node.getBounds(false, this._tempRect);\r\n        if (!element.pixiStyle) {\r\n            var index = PixiInspector.styleSheet.cssRules.length;\r\n            PixiInspector.styleSheet.insertRule(\"#px\" + index + \" {position:fixed;top:0;left:0;width:0;height:0}\", index);\r\n            element.pixiStyle = PixiInspector.styleSheet.cssRules[index].style;\r\n            element.id = \"px\" + index;\r\n        }\r\n        var style = element.pixiStyle;\r\n        if (node['__pixi_inspector_is_hidden__']) {\r\n            style.display = 'none';\r\n        }\r\n        style.top = (bounds.top + this._canvas.offsetTop).toFixed(2) + \"px\";\r\n        style.left = (bounds.left + this._canvas.offsetLeft).toFixed(2) + \"px\";\r\n        style.width = (bounds.width).toFixed(2) + \"px\";\r\n        style.height = (bounds.height).toFixed(2) + \"px\";\r\n    };\r\n    PixiInspector.prototype.setElementAttributes = function (node, element) {\r\n        var attributes = node['__pixi_inspector_attributes__'];\r\n        if (attributes) {\r\n            for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\r\n                var attribute = attributes_1[_i];\r\n                var value = void 0;\r\n                try {\r\n                    value = node[attribute.name];\r\n                }\r\n                catch (e) {\r\n                    continue;\r\n                }\r\n                if (attribute.parser.visible(value)) {\r\n                    element.setAttribute(attribute.name, attribute.parser.stringify(value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PixiInspector.prototype.onDomChange = function (mutations) {\r\n        for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\r\n            var mutation = mutations_1[_i];\r\n            if (mutation.type == 'attributes') {\r\n                var element = mutation.target;\r\n                var node = element.pixiTarget;\r\n                if (node) {\r\n                    var name_1 = mutation.attributeName;\r\n                    var value = element.getAttribute(name_1);\r\n                    var attributes = node['__pixi_inspector_attributes__'];\r\n                    if (attributes) {\r\n                        for (var _a = 0, attributes_2 = attributes; _a < attributes_2.length; _a++) {\r\n                            var attribute = attributes_2[_a];\r\n                            if (attribute.name == name_1) {\r\n                                node[name_1] = attribute.parser.parse(value, node[name_1]);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PixiInspector.prototype.createStyleSheet = function () {\r\n        if (!PixiInspector.styleSheet) {\r\n            var style = document.createElement('style');\r\n            style.appendChild(document.createTextNode('' +\r\n                '[id^=\"px\"] {pointer-events:none;}' +\r\n                '[id^=\"px\"]:empty {pointer-events:none;}' +\r\n                '[id^=\"px\"]:empty:hover {background:rgba(255,255,255,0.2);border:solid 1px #fff}'));\r\n            document.head.appendChild(style);\r\n            PixiInspector.styleSheet = style.sheet;\r\n        }\r\n    };\r\n    PixiInspector.prototype.addDocumentListeners = function () {\r\n        var _this = this;\r\n        var ctrl = 17;\r\n        var style = PixiInspector.styleSheet.cssRules[1].style;\r\n        document.addEventListener('keydown', function (event) {\r\n            if (event.which == ctrl && !_this._pointerEvents) {\r\n                _this._pointerEvents = true;\r\n                style.pointerEvents = 'auto';\r\n            }\r\n        });\r\n        document.addEventListener('keyup', function (event) {\r\n            if (event.which == ctrl && _this._pointerEvents) {\r\n                _this._pointerEvents = false;\r\n                style.pointerEvents = 'none';\r\n            }\r\n        });\r\n        document.addEventListener('click', function (event) {\r\n            var target = event.target.pixiTarget;\r\n            if (target) {\r\n                window.$pixi = target;\r\n            }\r\n        });\r\n        document.addEventListener('contextmenu', function (event) {\r\n            var target = event.target.pixiTarget;\r\n            if (target) {\r\n                window.$pixi = target;\r\n            }\r\n        });\r\n    };\r\n    return PixiInspector;\r\n}());\r\nexports.PixiInspector = PixiInspector;\r\nvar ElementPool = (function () {\r\n    function ElementPool() {\r\n        this.pools = {};\r\n    }\r\n    ElementPool.prototype.get = function (obj) {\r\n        var tagName = 'px-' + this.getTagName(obj).toLowerCase();\r\n        if (!Array.isArray(this.pools[tagName])) {\r\n            this.pools[tagName] = [];\r\n            if (!customElements.get(tagName)) {\r\n                customElements.define(tagName, function () {\r\n                }, { extends: 'div' });\r\n            }\r\n        }\r\n        return this.pools[tagName].pop() || document.createElement(tagName);\r\n    };\r\n    ElementPool.prototype.release = function (element) {\r\n        if (this.pools[element.localName].indexOf(element) < 0) {\r\n            this.pools[element.localName].push(element);\r\n        }\r\n    };\r\n    ElementPool.prototype.getTagName = function (obj) {\r\n        var className = null;\r\n        if (obj.constructor) {\r\n            var exec = /function\\s+(\\w{2,})\\(/.exec(obj.constructor.toString());\r\n            className = exec ? exec[1] : null;\r\n        }\r\n        if (className) {\r\n            return className;\r\n        }\r\n        for (var _i = 0, _a = ElementPool.defaultConstructors; _i < _a.length; _i++) {\r\n            var defaultConstructor = _a[_i];\r\n            if (obj instanceof defaultConstructor[0]) {\r\n                return defaultConstructor[1];\r\n            }\r\n        }\r\n        return 'DisplayObject';\r\n    };\r\n    ElementPool.defaultConstructors = [\r\n        [PIXI.mesh.NineSlicePlane, 'NineSlicePlane'],\r\n        [PIXI.mesh.Plane, 'Plane'],\r\n        [PIXI.mesh.Rope, 'Rope'],\r\n        [PIXI.Text, 'Text'],\r\n        [PIXI.extras.BitmapText, 'BitmapText'],\r\n        [PIXI.extras.AnimatedSprite, 'AnimatedSprite'],\r\n        [PIXI.extras.TilingSprite, 'TilingSprite'],\r\n        [PIXI.Sprite, 'Sprite'],\r\n        [PIXI.Graphics, 'Graphics'],\r\n        [PIXI.Container, 'Container'],\r\n    ];\r\n    return ElementPool;\r\n}());\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PrimitiveAttributeParser_1 = require(\"./PrimitiveAttributeParser\");\r\nvar ArrayAttributeParser = (function () {\r\n    function ArrayAttributeParser(elementParser, delimiter) {\r\n        if (delimiter === void 0) { delimiter = ','; }\r\n        this.delimiter = delimiter;\r\n        this.elementParser = typeof elementParser == 'function'\r\n            ? new elementParser()\r\n            : (elementParser || (new PrimitiveAttributeParser_1.PrimitiveAttributeParser()));\r\n    }\r\n    ArrayAttributeParser.prototype.parse = function (str, value) {\r\n        if (!Array.isArray(value)) {\r\n            value = [];\r\n        }\r\n        var i = 0;\r\n        var a = str.split(this.delimiter);\r\n        var n = Math.min(value.length, a.length);\r\n        for (i; i < n; i++) {\r\n            value[i] = this.elementParser.parse(a[i], value[i]);\r\n        }\r\n        n = a.length;\r\n        for (i; i < n; i++) {\r\n            value[i] = this.elementParser.parse(a[i]);\r\n        }\r\n        while (value.length > n) {\r\n            value.pop();\r\n        }\r\n        return value;\r\n    };\r\n    ArrayAttributeParser.prototype.stringify = function (value) {\r\n        var _this = this;\r\n        if (Array.isArray(value)) {\r\n            return value.map(function (it) { return _this.elementParser.stringify(it); }).join(this.delimiter);\r\n        }\r\n        return '';\r\n    };\r\n    ArrayAttributeParser.prototype.visible = function (value) {\r\n        return Array.isArray(value);\r\n    };\r\n    return ArrayAttributeParser;\r\n}());\r\nexports.ArrayAttributeParser = ArrayAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PrimitiveAttributeParser_1 = require(\"./PrimitiveAttributeParser\");\r\nvar ArrayAttributeParser_1 = require(\"./ArrayAttributeParser\");\r\nvar AutoAttributeParser = (function () {\r\n    function AutoAttributeParser() {\r\n        this.arrayAttributeParser = new ArrayAttributeParser_1.ArrayAttributeParser();\r\n        this.primitiveAttributeParser = new PrimitiveAttributeParser_1.PrimitiveAttributeParser();\r\n    }\r\n    AutoAttributeParser.prototype.parse = function (str, value) {\r\n        if (Array.isArray(value)) {\r\n            return this.arrayAttributeParser.parse(str, value);\r\n        }\r\n        return this.primitiveAttributeParser.parse(str, value);\r\n    };\r\n    AutoAttributeParser.prototype.stringify = function (value) {\r\n        if (Array.isArray(value)) {\r\n            return this.arrayAttributeParser.stringify(value);\r\n        }\r\n        return this.primitiveAttributeParser.stringify(value);\r\n    };\r\n    AutoAttributeParser.prototype.visible = function (value) {\r\n        return true;\r\n    };\r\n    return AutoAttributeParser;\r\n}());\r\nexports.AutoAttributeParser = AutoAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ColorAttributeParser = (function () {\r\n    function ColorAttributeParser() {\r\n    }\r\n    ColorAttributeParser.prototype.parse = function (str, value) {\r\n        return parseInt(str.replace('#', '0x'));\r\n    };\r\n    ColorAttributeParser.prototype.stringify = function (value) {\r\n        if (!value) {\r\n            return '#000000';\r\n        }\r\n        return '#' + value.toString(16).replace('0x', '');\r\n    };\r\n    ColorAttributeParser.prototype.visible = function (value) {\r\n        return true;\r\n    };\r\n    return ColorAttributeParser;\r\n}());\r\nexports.ColorAttributeParser = ColorAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PointAttributeParser = (function () {\r\n    function PointAttributeParser(numberPrecision, factory) {\r\n        if (numberPrecision === void 0) { numberPrecision = 2; }\r\n        this.numberPrecision = numberPrecision;\r\n        this.factory = factory;\r\n    }\r\n    PointAttributeParser.prototype.parse = function (str, value) {\r\n        if (!value) {\r\n            if (this.factory) {\r\n                value = this.factory();\r\n            }\r\n            else {\r\n                console.error('Cannot parse attribute from \"' + str + '\" because factory is not defined.');\r\n                return value;\r\n            }\r\n        }\r\n        var n = str.split(',');\r\n        if (n.length > 1) {\r\n            value.x = parseFloat(n[0]);\r\n            value.y = parseFloat(n[1]);\r\n        }\r\n        else {\r\n            value.x = value.y = parseFloat(n[0]);\r\n        }\r\n        return value;\r\n    };\r\n    PointAttributeParser.prototype.stringify = function (value) {\r\n        if (value) {\r\n            var x = value.x.toFixed(this.numberPrecision);\r\n            var y = value.y.toFixed(this.numberPrecision);\r\n            return x == y ? x : x + ',' + y;\r\n        }\r\n        return '';\r\n    };\r\n    PointAttributeParser.prototype.visible = function (value) {\r\n        return value != null;\r\n    };\r\n    return PointAttributeParser;\r\n}());\r\nexports.PointAttributeParser = PointAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PrimitiveAttributeParser = (function () {\r\n    function PrimitiveAttributeParser(numberPrecision) {\r\n        if (numberPrecision === void 0) { numberPrecision = 2; }\r\n        this.numberPrecision = numberPrecision;\r\n    }\r\n    PrimitiveAttributeParser.prototype.parse = function (str, value) {\r\n        switch (typeof value) {\r\n            case 'number':\r\n                return parseFloat(str);\r\n            case 'boolean':\r\n                return str == 'true';\r\n            case 'string':\r\n                return str;\r\n        }\r\n        if (str == 'true' || str == 'false') {\r\n            return str == 'true';\r\n        }\r\n        var n = parseFloat(str);\r\n        if (!isNaN(n)) {\r\n            return n;\r\n        }\r\n        return str;\r\n    };\r\n    PrimitiveAttributeParser.prototype.stringify = function (value) {\r\n        if (typeof value == 'number') {\r\n            return value.toFixed(this.numberPrecision);\r\n        }\r\n        if (value === false || value) {\r\n            return value.toString();\r\n        }\r\n        return '';\r\n    };\r\n    PrimitiveAttributeParser.prototype.visible = function (value) {\r\n        return true;\r\n    };\r\n    return PrimitiveAttributeParser;\r\n}());\r\nexports.PrimitiveAttributeParser = PrimitiveAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TextureAttributeParser = (function () {\r\n    function TextureAttributeParser() {\r\n    }\r\n    TextureAttributeParser.prototype.parse = function (str, value) {\r\n        var texture = PIXI.utils.TextureCache[str];\r\n        if (texture instanceof PIXI.Texture) {\r\n            return texture;\r\n        }\r\n        return value;\r\n    };\r\n    TextureAttributeParser.prototype.stringify = function (value) {\r\n        return value.textureCacheIds[0];\r\n    };\r\n    TextureAttributeParser.prototype.visible = function (value) {\r\n        return !!value.textureCacheIds;\r\n    };\r\n    return TextureAttributeParser;\r\n}());\r\nexports.TextureAttributeParser = TextureAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AutoAttributeParser_1 = require(\"../attributes/AutoAttributeParser\");\r\nfunction domAttr(parser) {\r\n    return function (target, propertyName) {\r\n        if (!target.hasOwnProperty('__pixi_inspector_class_attributes__')) {\r\n            target['__pixi_inspector_class_attributes__'] = [];\r\n        }\r\n        var classAttributes = target['__pixi_inspector_class_attributes__'];\r\n        if (!classAttributes.some(function (it) { return it.name == propertyName; })) {\r\n            classAttributes.push({\r\n                name: propertyName,\r\n                parser: typeof parser == 'function' ? new parser() : (parser || new AutoAttributeParser_1.AutoAttributeParser())\r\n            });\r\n        }\r\n        if (!target.hasOwnProperty('__pixi_inspector_attributes__')) {\r\n            Object.defineProperty(target, '__pixi_inspector_attributes__', {\r\n                get: function () {\r\n                    var superClassAttributes = Object.getPrototypeOf(target)['__pixi_inspector_attributes__'];\r\n                    if (Array.isArray(superClassAttributes)) {\r\n                        return superClassAttributes.concat(classAttributes);\r\n                    }\r\n                    return classAttributes;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\nexports.domAttr = domAttr;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction domHidden() {\r\n    return function (constructor) {\r\n        constructor.prototype['__pixi_inspector_is_hidden__'] = true;\r\n    };\r\n}\r\nexports.domHidden = domHidden;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction domLeaf() {\r\n    return function (constructor) {\r\n        constructor.prototype['__pixi_inspector_is_leaf__'] = true;\r\n    };\r\n}\r\nexports.domLeaf = domLeaf;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PixiInspector_1 = require(\"./PixiInspector\");\r\nvar PointAttributeParser_1 = require(\"./attributes/PointAttributeParser\");\r\nvar TextureAttributeParser_1 = require(\"./attributes/TextureAttributeParser\");\r\nvar ColorAttributeParser_1 = require(\"./attributes/ColorAttributeParser\");\r\nfunction getDefault(rootNode, canvas) {\r\n    return new PixiInspector_1.PixiInspector(rootNode, canvas)\r\n        .domAttr(PIXI.DisplayObject, 'x')\r\n        .domAttr(PIXI.DisplayObject, 'y')\r\n        .domAttr(PIXI.DisplayObject, 'scale', PointAttributeParser_1.PointAttributeParser)\r\n        .domAttr(PIXI.DisplayObject, 'rotation')\r\n        .domAttr(PIXI.DisplayObject, 'alpha')\r\n        .domAttr(PIXI.Sprite, 'texture', TextureAttributeParser_1.TextureAttributeParser)\r\n        .domAttr(PIXI.Sprite, 'anchor', PointAttributeParser_1.PointAttributeParser)\r\n        .domAttr(PIXI.Sprite, 'tint', ColorAttributeParser_1.ColorAttributeParser)\r\n        .domAttr(PIXI.mesh.Mesh, 'texture', TextureAttributeParser_1.TextureAttributeParser)\r\n        .domAttr(PIXI.mesh.Mesh, 'tint', ColorAttributeParser_1.ColorAttributeParser)\r\n        .domAttr(PIXI.Text, 'text')\r\n        .domAttr(PIXI.Text, 'anchor', PointAttributeParser_1.PointAttributeParser)\r\n        .domAttr(PIXI.extras.BitmapText, 'text')\r\n        .domAttr(PIXI.extras.BitmapText, 'anchor', PointAttributeParser_1.PointAttributeParser)\r\n        .domAttr(PIXI.extras.BitmapText, 'tint', ColorAttributeParser_1.ColorAttributeParser);\r\n}\r\nexports.getDefault = getDefault;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PixiInspector_1 = require(\"./PixiInspector\");\r\nexports.PixiInspector = PixiInspector_1.PixiInspector;\r\nvar getDefault_1 = require(\"./getDefault\");\r\nexports.getDefault = getDefault_1.getDefault;\r\nvar domAttr_1 = require(\"./decorators/domAttr\");\r\nexports.domAttr = domAttr_1.domAttr;\r\nvar domLeaf_1 = require(\"./decorators/domLeaf\");\r\nexports.domLeaf = domLeaf_1.domLeaf;\r\nvar domHidden_1 = require(\"./decorators/domHidden\");\r\nexports.domHidden = domHidden_1.domHidden;\r\nvar PrimitiveAttributeParser_1 = require(\"./attributes/PrimitiveAttributeParser\");\r\nexports.PrimitiveAttributeParser = PrimitiveAttributeParser_1.PrimitiveAttributeParser;\r\nvar PointAttributeParser_1 = require(\"./attributes/PointAttributeParser\");\r\nexports.PointAttributeParser = PointAttributeParser_1.PointAttributeParser;\r\nvar ArrayAttributeParser_1 = require(\"./attributes/ArrayAttributeParser\");\r\nexports.ArrayAttributeParser = ArrayAttributeParser_1.ArrayAttributeParser;\r\nvar TextureAttributeParser_1 = require(\"./attributes/TextureAttributeParser\");\r\nexports.TextureAttributeParser = TextureAttributeParser_1.TextureAttributeParser;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nif (typeof PIXI === 'undefined') {\r\n    throw \"pixi-inspector requires pixi.js to be loaded first\";\r\n}\r\nvar inspector = require(\"./inspector\");\r\nif (!PIXI.inspector) {\r\n    PIXI.inspector = inspector;\r\n}\r\nelse {\r\n    for (var prop in inspector) {\r\n        PIXI.inspector[prop] = inspector[prop];\r\n    }\r\n}\r\nif (typeof module !== \"undefined\" && module.exports) {\r\n    module.exports = inspector;\r\n}\r\n"],"sourceRoot":"."}